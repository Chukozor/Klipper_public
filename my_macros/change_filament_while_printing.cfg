###/###########################################
[gcode_macro WHILE_PRINTING_PAUSE_AND_UNLOAD_FILAMENT]
description: Pause l impression, Z_MARGE= en mm est un parametre optionnel pour descendre le lit de cette hauteur.
gcode:
  {% set myvar = printer["gcode_macro MyVariables"] %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  #### special occasion pour les gamines
  ###############
  ##### end of definitions #####
  PAUSE_BASE
  _ABSOLUTE_POSITIONS_COOR_EXCEPT_EXTRUDER
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{ myvar.retract_pause_length|float } F{ myvar.move_speed_retraction_pause*60|float }
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91 # EXTREMEMENT IMPORTANT ICI !!!!!!
    G1 Z{z_safe} F{ myvar.move_speed_z*60|float }
    _ABSOLUTE_POSITIONS_COOR_EXCEPT_EXTRUDER
    M106 S64            # fan at 51/255 %
    _GO_TO_HEAT_FILAMENT_SPOT
    SAVE_GCODE_STATE NAME=AVANT_GROS_MOUVEMENTS_EN_Z # save position before big mouvements in Z
    # gros mouvement en Z =================
    {% set new_act_z = act_z + z_safe %}
    {% if params.Z_MARGE is defined %}
      {% set marge_z = params.Z_MARGE|float %}
    {% else %}
      {% set marge_z = 100.0|float %}
    {% endif %}
    #
    {% if new_act_z < (max_z - marge_z) %}
        {% set z_safest = marge_z %}
    {% else %}
        {% set z_safest = max_z - new_act_z %}
    {% endif %}
    #
    G91 # EXTREMEMENT IMPORTANT ICI !!!!!!
    G1 Z{z_safest} F{ myvar.move_speed_z*60|float }
    _ABSOLUTE_POSITIONS_COOR_EXCEPT_EXTRUDER
    # maintenant on est tranquilles pour aller au milieu pour changer le filament
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}
  _ABSOLUTE_POSITIONS_COOR_EXCEPT_EXTRUDER
  _CONTENU_UNLOAD_FILAMENT


# macro DELAY_GRAB_FILAMENT


[gcode_macro ONLINE_LOAD_FILAMENT]
gcode:
  {% set myvar = printer["gcode_macro MyVariables"] %}
  {% set temp = params.S|float %}
  _GO_TO_HEAT_FILAMENT_SPOT
  RESTORE_GCODE_STATE NAME=AVANT_GROS_MOUVEMENTS_EN_Z MOVE=1 SPEED={ myvar.move_speed_waiting }
  {% if temp > 280 %}
    {action_raise_error("temperature too high, please set a lower temperature")}
  {% else %}
    {% if temp < 180 %}
      {action_raise_error("temperature too high, please set a higher temperature")}
    {% else %}
      M106 S64            # fan at 51/255 %
      M109 S{temp}        # set temp nozzle at temp and wait
      _GO_TO_HEAT_FILAMENT_SPOT
      _CONTENU_LOAD_FILAMENT
    {% endif %}
  {% endif %}

[gcode_macro ONLINE_PURGE_FORMER_FILAMENT] # certifie pour Bertha
gcode:
  {% set myvar = printer["gcode_macro MyVariables"] %}
  _ABSOLUTE_POSITIONS_COOR_EXCEPT_EXTRUDER
  BIP
  _GO_TO_HEAT_FILAMENT_SPOT
  RESTORE_GCODE_STATE NAME=AVANT_GROS_MOUVEMENTS_EN_Z MOVE=1 SPEED={ myvar.move_speed_waiting }
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E{ myvar.no_ooze_purge_former_filament_length } F150 # prime
    _NO_OOZE
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}


[gcode_macro BRUSH_AND_RESUME]
description: as the name says
gcode:
  {% set myvar = printer["gcode_macro MyVariables"] %}
  _GO_TO_HEAT_FILAMENT_SPOT
  RESTORE_GCODE_STATE NAME=AVANT_GROS_MOUVEMENTS_EN_Z MOVE=1 SPEED={ myvar.move_speed_waiting }
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {% else %}
    {% set get_params = ('VELOCITY=' + ((myvar.move_speed_waiting*60|float)|string)) %} # default value for velocity
  {% endif %}
  ##### end of definitions #####
  {% if "xyz" in printer.toolhead.homed_axes %}
    _GO_TO_JUST_BEFORE_THE_TOOTHBRUSH
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}
  _ABSOLUTE_POSITIONS_COOR_EXCEPT_EXTRUDER
  {% if printer.extruder.can_extrude|lower == 'true' %}
    _QUICK_BRUSH
    G1 E{ myvar.no_ooze_purge_length } F250 # purge du filament =========
    _NO_OOZE
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  _PASSAGE_ECLAIR_SUR_BROSSE
  RESUME_BASE {get_params}
